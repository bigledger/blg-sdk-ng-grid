.avatar-core-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  min-height: 300px;
  background: #f8f9fa;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

.avatar-core-container.ready {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

/* Loading State */
.avatar-status {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  color: #666;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid #e0e0e0;
  border-top: 3px solid #667eea;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Avatar Content */
.avatar-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
}

.avatar-placeholder {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 24px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  text-align: center;
  min-width: 200px;
}

.avatar-info h3 {
  margin: 0 0 8px 0;
  color: #333;
  font-size: 1.25rem;
  font-weight: 600;
}

.avatar-info p {
  margin: 0 0 16px 0;
  color: #666;
  font-size: 0.9rem;
}

/* Status Indicators */
.status-indicators {
  display: flex;
  justify-content: center;
  gap: 12px;
}

.indicator {
  display: inline-block;
  font-size: 20px;
  opacity: 0.3;
  transition: opacity 0.3s ease, transform 0.3s ease;
  cursor: default;
}

.indicator.active {
  opacity: 1;
  transform: scale(1.1);
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Debug Information */
.debug-info {
  position: absolute;
  bottom: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 0.75rem;
  font-family: 'Courier New', monospace;
}

.stats {
  display: flex;
  gap: 16px;
}

.stat {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2px;
}

.stat label {
  font-weight: bold;
  opacity: 0.7;
}

.stat span {
  font-weight: normal;
}

/* Responsive Design */
@media (max-width: 768px) {
  .avatar-core-container {
    min-height: 250px;
  }
  
  .avatar-placeholder {
    padding: 16px;
    min-width: 150px;
  }
  
  .avatar-info h3 {
    font-size: 1.1rem;
  }
  
  .indicator {
    font-size: 18px;
  }
  
  .debug-info {
    font-size: 0.65rem;
  }
  
  .stats {
    gap: 12px;
  }
}

/* Dark Theme Support */
@media (prefers-color-scheme: dark) {
  .avatar-core-container {
    background: #2d3748;
  }
  
  .avatar-status {
    color: #e2e8f0;
  }
  
  .loading-spinner {
    border-color: #4a5568;
    border-top-color: #667eea;
  }
  
  .avatar-placeholder {
    background: rgba(45, 55, 72, 0.95);
    color: #e2e8f0;
  }
  
  .avatar-info h3 {
    color: #f7fafc;
  }
  
  .avatar-info p {
    color: #cbd5e0;
  }
}

/* Hover Effects */
.avatar-core-container:hover {
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  transform: translateY(-2px);
  transition: all 0.3s ease;
}

/* Focus and Accessibility */
.avatar-core-container:focus-within {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}

.indicator:focus {
  outline: 1px solid #667eea;
  outline-offset: 2px;
  border-radius: 50%;
}

/* Animation Classes */
.avatar-content {
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Error State (can be added via class binding) */
.avatar-core-container.error {
  background: linear-gradient(135deg, #fc8181 0%, #f56565 100%);
}

.avatar-core-container.error .avatar-placeholder {
  background: rgba(255, 255, 255, 0.9);
  border: 2px solid #f56565;
}

/* Processing State */
.avatar-core-container.processing .indicator:first-child {
  animation: bounce 1s infinite;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}